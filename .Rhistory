geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = mean(avgSpeed)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = mean(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = median(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
finalTimes <- rawData %>%
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
#Looking at the qqplot there are some clear outliers
qqPlot(finalTimes$totalTime)
#Looking at the histogram there is again some very clear outliers and the median line is not at the peak as we had hoped
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = median(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
#color = FOD,
#group = c(Scenario))
y = totalTime
#color = FOD,
#group = c(Scenario))
) +
geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1)) #+
#color = FOD,
#group = c(Scenario))
) +
ggplot(finalTimes, aes(x = Inventory,
y = totalTime
#color = FOD,
#group = c(Scenario))
) +
geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
ggplot(finalTimes, aes(x = Inventory,
y = totalTime
#color = FOD,
#group = c(Scenario))
) +
geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
ggplot(finalTimes, aes(x = Inventory,
y = totalTime ) +
geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
ggplot(finalTimes, aes(x = c(Inventory),
y = totalTime ) +
geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
summary(finalTimes)
library(tidyverse)
library(gapminder)
install.packages(gapminder)
install.packages("gapminder")
library(gapminder)
ggplot(finalTimes, aes(x = Inventory,
y = totalTime ) +
#geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
ggplot(finalTimes, mapping = aes(x = Inventory,
y = totalTime ) +
#geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
summary(finalTimes)
fixedRawData <- as.factor(rawData$Inventory)
finalTimes <- rawData %>%
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
summary(finalTimes)
class(fixedRawData$Inventory)
library(dplyr)
library("readxl")
library("car")
library(tidyverse)
library(gapminder)
#Load the data into R. Let's hope Xlsx haven't fucked up the data
rawData <- read_excel("TestData.xlsx")
save(rawData, file='AllRawData.rda', compress=TRUE)
rawData$Inventory <- as.factor(rawData$Inventory)
class(fixedRawData$Inventory)
class(rawData$Inventory)
# The inventory was saved as a character and we need it as a factor to plot it
rawData$Inventory <- as.factor(rawData$Inventory)
class(rawData$Inventory)
finalTimes <- rawData %>%
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
summary(finalTimes)
#Looking at the qqplot there are some clear outliers
qqPlot(finalTimes$totalTime)
#Looking at the histogram there is again some very clear outliers and the median line is not at the peak as we had hoped
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = median(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
ggplot(finalTimes, mapping = aes(x = Inventory,
y = totalTime ) +
#geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
ggplot(finalTimes, (x = Inventory, y = totalTime ) +
#geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
participantTaskMedian <- group_by(finalTimes, ParticipantID, taskID) %>%
summarise(medianFinalTime=median(finalTime))
ggplot(finalTimes, (x = Inventory y = totalTime ) +
#geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
ggplot(finalTimes, (x = Inventory, y = totalTime ) +
#geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
ggplot(finalTimes, aes(x = Inventory, y = totalTime ) +
#geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1))) #+
ggplot(finalTimes, aes(x = Inventory, y = totalTime ) +
geom_boxplot(aes(alpha = .1)))
geom_boxplot()
ggplot(finalTimes, aes(x = Inventory, y = totalTime ) +
geom_boxplot())
ggplot(finalTimes, aes(x = Inventory, y = totalTime )) +
geom_boxplot()
ggplot(finalTimes, aes(x = Inventory, y = totalTime )) +
geom_jitter(width = .2)+
geom_boxplot(aes(alpha = .1)) +
theme_bw()
ggplot(finalTimes, aes(x = Inventory, y = totalTime )) +
geom_boxplot(aes(alpha = .1)) +
theme_bw()
#
ggplot(finalTimes, aes(x = Inventory, y = totalWrongItem )) +
geom_boxplot(aes(alpha = .1)) +
theme_bw()
#Looking at the histogram there is again some very clear outliers and the median line is not at the peak as we had hoped
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = median(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
#Having them next to each other, it is hard to see a difference I wonder if we will find any statically difference. Again Clear outlire
ggplot(finalTimes, aes(x = Inventory, y = totalTime )) +
geom_boxplot(aes(alpha = .1)) +
theme_bw()
finalTimes <- rawData %>%
filter(TimeSinceStart<30)
finalTimes <- rawData %>%
filter(TimeSinceStart<30) %>%
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
summary(finalTimes)
#Looking at the qqplot there are some clear outliers
qqPlot(finalTimes$totalTime)
#Looking at the histogram there is again some very clear outliers and the median line is not at the peak as we had hoped
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = median(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
#Having them next to each other, it is hard to see a difference I wonder if we will find any statically difference. Again Clear outlire
ggplot(finalTimes, aes(x = Inventory, y = totalTime )) +
geom_boxplot(aes(alpha = .1)) +
theme_bw()
#Looking at the qqplot there are some clear outliers
qqPlot(finalTimes$totalTime)
#Looking at the histogram there is again some very clear outliers and the median line is not at the peak as we had hoped
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = median(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
#Having them next to each other, it is hard to see a difference I wonder if we will find any statically difference. Again Clear outlire
ggplot(finalTimes, aes(x = Inventory, y = totalTime )) +
geom_boxplot(aes(alpha = .1)) +
theme_bw()
TimeByCategory <- finalTimes %>%
group_by(Inventory) %>%
mutate(CategoryTime = median(c(TimeInCategoryFood, TimeInCategoryMaterial, TimeInCategoryTools, TimeInCategoryDrink))) %>%
summarise(n=n(),
medianMain = median(totalTimeMain),
medianCategory = CategoryTime) %>%
gather("key", "value", - c(Inventory, n))
finalTimes <- finalTimes %>%
group_by(Inventory) %>%
rowwise() %>%
mutate(CategoryTime = median(c(TimeInCategoryFood, TimeInCategoryMaterial, TimeInCategoryTools, TimeInCategoryDrink)))
ggplot(finalTimes, aes(x=Inventory, y=totalTime)) +
geom_bar(stat="identity")
ggplot(finalTimes, aes(x=Inventory, y=median(totalTime))) +
geom_bar(stat="identity")
ggplot(MedianTime, aes(x=Inventory, y=medianTotal)) +
geom_bar(stat="identity")
ggplot(MedianTime, aes(x=Inventory, y=medianTotal)) +
geom_bar(stat="identity")
MedianTime <- finalTimes %>%
group_by(Inventory) %>%
summarise(medianTotal = median(totalTime))
ggplot(MedianTime, aes(x=Inventory, y=medianTotal)) +
geom_bar(stat="identity")
View(MedianTime)
View(finalTimes)
library(dplyr)
library("readxl")
library("car")
library(tidyverse)
library(gapminder)
#Load the data into R. Let's hope Xlsx haven't fucked up the data
rawData <- read_excel("TestData.xlsx")
#Make the data into a .rda file that works better with r-studio
save(rawData, file='AllRawData.rda', compress=TRUE)
# The inventory was saved as a character and we need it as a factor to plot it
rawData$Inventory <- as.factor(rawData$Inventory)
#check that the inventory is now a factor
class(rawData$Inventory)
#Make a data frame
finalTimes <- rawData %>%
filter(TimeSinceStart<30) %>% #This is to remove the outliers they were just annoying, but I'm not sure you can justify removing them
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
summary(finalTimes)
#Looking at the qqplot there are some clear outliers
qqPlot(finalTimes$totalTime)
#Looking at the histogram there is again some very clear outliers and the median line is not at the peak as we had hoped
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = median(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
#Having them next to each other, it is hard to see a difference I wonder if we will find any statically difference. Again Clear outlire
ggplot(finalTimes, aes(x = Inventory, y = totalTime )) +
geom_boxplot(aes(alpha = .1)) +
theme_bw()
MedianTime <- finalTimes %>%
group_by(Inventory) %>%
summarise(medianTotal = median(totalTime))
ggplot(MedianTime, aes(x=Inventory, y=medianTotal)) +
geom_bar(stat="identity")
ggplot(MedianTime, aes(x=Inventory, y=medianTotal)) +
geom_bar(stat="identity")+
geom_text(aes(label=len), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(MedianTime, aes(x=Inventory, y=medianTotal)) +
geom_bar(stat="identity")+
geom_text(aes(label=medianTotal), vjust=-0.3, size=3.5)+
theme_minimal()
#Data Frame comining each
finalTimes %>%
group_by(Inventory) %>%
summarise(n=n(),
totalTimeMain,
totalTimeFood,
totalTimeTool,
totalTimeMaterial,
totalTimeDrink) %>%
gather("key", "value", - c(Inventory, n)) %>%
ggplot(aes(x = Inventory, y = value, group = key, fill = key)) + geom_col()
#This shows the total time spend in each category. The plot is misleading since it does not look at each test individual.
finalTimes %>%
group_by(Inventory) %>%
summarise(n=n(),
totalTimeMain,
totalTimeFood,
totalTimeTool,
totalTimeMaterial,
totalTimeDrink) %>%
gather("key", "value", - c(Inventory, n)) %>%
ggplot(aes(x = Inventory, y = value, group = key, fill = key)) +
geom_bar(stat="identity")+
geom_text(aes(label=medianTotal), vjust=-0.3, size=3.5)+
theme_minimal()geom_col()
#This shows the total time spend in each category. The plot is misleading since it does not look at each test individual.
finalTimes %>%
group_by(Inventory) %>%
summarise(n=n(),
totalTimeMain,
totalTimeFood,
totalTimeTool,
totalTimeMaterial,
totalTimeDrink) %>%
gather("key", "value", - c(Inventory, n)) %>%
ggplot(aes(x = Inventory, y = value, group = key, fill = key)) +
geom_bar(stat="identity")+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal()
#This shows the total time spend in each category. The plot is misleading since it does not look at each test individual.
finalTimes %>%
group_by(Inventory) %>%
summarise(n=n(),
totalTimeMain,
totalTimeFood,
totalTimeTool,
totalTimeMaterial,
totalTimeDrink) %>%
gather("key", "value", - c(Inventory, n)) %>%
ggplot(aes(x = Inventory, y = value, group = key, fill = key)) +
geom_bar(stat="identity")+
geom_text(aes(y=label_ypos, label=value), vjust=-0.3, size=3.5)+
theme_minimal()
#This shows the total time spend in each category. The plot is misleading since it does not look at each test individual.
finalTimes %>%
group_by(Inventory) %>%
summarise(n=n(),
totalTimeMain,
totalTimeFood,
totalTimeTool,
totalTimeMaterial,
totalTimeDrink) %>%
gather("key", "value", - c(Inventory, n)) %>%
ggplot(aes(x = Inventory, y = value, group = key, fill = key)) +
geom_bar(stat="identity")+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal()
participantTaskMedian <- finalTimes %>%
group_by(finalTimes, ParticipantID, taskID) %>%
summarise(medianFinalTime=median(finalTime))
participantTaskMedian <- finalTimes %>%
group_by(ParticipantID, taskID) %>%
summarise(medianFinalTime=median(finalTime))
participantTaskMedian <- finalTimes %>%
group_by(ParticipantID, taskID) %>%
summarise(medianFinalTime=median(totalTime))
View(participantTaskMedian)
participantTaskMedian <- finalTimes %>%
group_by(ParticipantID, taskID) %>%
summarise(medianFinalTime=median(totalTime))
friedman.test(y=participantTaskMedian$medianFinalTime, groups=participantTaskMedian$taskID , blocks=participantTaskMedian$ParticipantID)
finalTimes <- finalTimes %>%
mutate(correctCategoryTimer = case_when(correctItemID == 0 ~ totalTimeTool,
correctItemID == 1 ~ totalTimeMaterial,
correctItemID == 2 ~ totalTimeFood,
correctItemID == 4 ~ totalTimeFood,
correctItemID == 3 ~  totalTimeDrink,
TRUE ~ NA_real_))
View(rawData)
#Make a data frame
finalTimes <- rawData %>%
filter(TimeSinceStart<30) %>% #This is to remove the outliers they were just annoying, but I'm not sure you can justify removing them
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
correctItemID = max(CorrectItem),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
finalTimes <- finalTimes %>%
mutate(correctCategoryTimer = case_when(correctItemID == 0 ~ totalTimeTool,
correctItemID == 1 ~ totalTimeMaterial,
correctItemID == 2 ~ totalTimeFood,
correctItemID == 4 ~ totalTimeFood,
correctItemID == 3 ~  totalTimeDrink,
TRUE ~ NA_real_))
#Make a data frame
finalTimes <- rawData %>%
filter(TimeSinceStart<30) %>% #This is to remove the outliers they were just annoying, but I'm not sure you can justify removing them
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
correctItemID = max(CorrectItem),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
library(gapminder)
#Load the data into R. Let's hope Xlsx haven't fucked up the data
rawData <- read_excel("TestData.xlsx")
#Make the data into a .rda file that works better with r-studio
save(rawData, file='AllRawData.rda', compress=TRUE)
# The inventory was saved as a character and we need it as a factor to plot it
rawData$Inventory <- as.factor(rawData$Inventory)
#check that the inventory is now a factor
class(rawData$Inventory)
#Make a data frame
finalTimes <- rawData %>%
filter(TimeSinceStart<30) %>% #This is to remove the outliers they were just annoying, but I'm not sure you can justify removing them
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
correctItemID = max(CorrectItem),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
finalTimes <- finalTimes %>%
mutate(correctCategoryTimer = case_when(correctItemID == 0 ~ totalTimeTool,
correctItemID == 1 ~ totalTimeMaterial,
correctItemID == 2 ~ totalTimeFood,
correctItemID == 4 ~ totalTimeFood,
correctItemID == 3 ~  totalTimeDrink,
TRUE ~ NA_real_))
timesForCorrectCategory <- group_by(taskID, ParticipantID, correctCategoryTimer) %>%
summarise()
timesForCorrectCategory <- finalTimes %>%  group_by(taskID, ParticipantID, correctCategoryTimer) %>%
summarise()
View(timesForCorrectCategory)
friedman.test(y=timesForCorrectCategory$correctCategoryTimer, groups=timesForCorrectCategory$taskID , blocks=timesForCorrectCategory$ParticipantID)
summary(glm(totalTime ~ Invertory,  family="poisson", data = finalTimes))
summary(glm(totalTime ~ Inventory,  family="poisson", data = finalTimes))
View(finalTimes)
shapiro.test(finalTimes$totalTime)
View(rawData)
#overview of the data frame
summary(finalTimes)
#Making the main data frame
finalTimes <- rawData %>%
#filter(TimeSinceStart<30) %>% #This is to remove the outliers they were just annoying, but I'm not sure you can justify removing them
group_by(ParticipantID, taskID, testIDIndividual, Inventory) %>%
summarise(maxActions = max(NumberOfActions),
correctItemID = max(CorrectItem),
totalTime = max(TimeSinceStart),
totalTimeMain = max(TimeInMain),
totalTimeFood = max(TimeInCategoryFood),
totalTimeTool = max(TimeInCategoryTools),
totalTimeMaterial = max(TimeInCategoryMaterial),
totalTimeDrink = max(TimeInCategoryDrink),
totalWrongCategory = max(CountOfIrrelevantCategory),
totalWrongItem = max(CounterWrongItemPicked))
#This was a nice mutation, but what happens if they entered the correct category multiple times?
finalTimes <- finalTimes %>%
mutate(correctCategoryTimer = case_when(correctItemID == 0 ~ totalTimeTool,
correctItemID == 1 ~ totalTimeMaterial,
correctItemID == 2 ~ totalTimeFood,
correctItemID == 4 ~ totalTimeFood,
correctItemID == 3 ~ totalTimeDrink,
TRUE ~ NA_real_))
#overview of the data frame
summary(finalTimes)
#shapiro test to look for nomality
shapiro.test(finalTimes$totalTime)
#Looking at the qqplot there are some clear outliers
qqPlot(finalTimes$totalTime)
#Looking at the histogram there is again some very clear outliers and the median line is not at the peak as we had hoped
ggplot(finalTimes, aes(x = totalTime)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666") +
geom_vline(aes(xintercept = median(totalTime)), color = "blue", linetype = "dashed", size = 1) +
theme_bw()
#
participantTaskMedian <- finalTimes %>%
group_by(ParticipantID, taskID) %>%
summarise(medianFinalTime=median(totalTime))
friedman.test(y=participantTaskMedian$medianFinalTime, groups=participantTaskMedian$taskID , blocks=participantTaskMedian$ParticipantID)
timesForCorrectCategory <- finalTimes %>%  group_by(taskID, ParticipantID, correctCategoryTimer) %>%
summarise()
friedman.test(y=timesForCorrectCategory$correctCategoryTimer, groups=timesForCorrectCategory$taskID , blocks=timesForCorrectCategory$ParticipantID)
timesForCorrectCategory <- finalTimes %>%  group_by(taskID, ParticipantID, correctCategoryTimer) %>%
summarise()
friedman.test(y = timesForCorrectCategory$correctCategoryTimer,
groups = timesForCorrectCategory$taskID ,
blocks = timesForCorrectCategory$ParticipantID)
View(timesForCorrectCategory)
finalTimes %>%
group_by(Inventory) %>%
get_summary_stats(score, type = "common")
library(gapminder)
library(ggpubr)
library(rstatix)
